<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Webscraping on 6W3N Site</title>
    <link>https://6w3n.github.io/tags/webscraping/</link>
    <description>Recent content in Webscraping on 6W3N Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://6w3n.github.io/tags/webscraping/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>RSelenium memo</title>
      <link>https://6w3n.github.io/posts/rselenium/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://6w3n.github.io/posts/rselenium/</guid>
      <description>Preface このページは、RとSeleniumを使ったWeb Scraping（特に画像）の備忘録です。
今回はGoogleでキーワードを入力した際に表示される大量の画像の取得を目指します。
ここに表示されている画像たちです。
Environment  Mac OS Catalina var. 10.15.4 Docker var. 2.2.0.5 RSelenium var. 1.7.7 R var. 3.6.1 wget (or curl)  今回はMac OSでの動かし方になります。Linuxでも大筋は変わりません。（誰か試してみて欲しい。） Windowsで、DockerやTerminal相当のものを動かしたことがないので今回は説明できません。パスです。
上記環境ではDockerを用いていますが、Selenium自体はDockerでなくとも動きます。このページでは、簡単のためにDockerでの動かし方を書いています。
また、上記の環境はインストール済みであるという前提にします。
What&amp;rsquo;s RSelenium? RSeleniumとはSeleniumをR上で動かすためのパッケージです。 Seleniumは、ウェブブラウザを操作するための便利ツールくらいに思って置いてもらって構いません。 Seleniumについて詳しく知りたい方はこちらを参照ください。
Main Flow  Dockerの起動。 Terminalを開いて、Dockerを走らせる。 画像を取得するURLを生成。 RSeleniumで画像のURLを一括取得。 wgetを用いて画像を取得。  1.</description>
    </item>
    
  </channel>
</rss>